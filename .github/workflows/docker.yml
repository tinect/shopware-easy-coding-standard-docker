name: Docker Image CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    strategy: 
      matrix:
        php: [7.4, 8.0, 8.1]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.CACHE_KEY }}-${{ matrix.php }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ env.CACHE_KEY }}-${{ matrix.php }}-

      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          build-args: |
            PHP_VERSION=${{ matrix.php }}
          tags: ${{ matrix.php }}
          push: false
          load: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - name: Get Tag
        id: get-publish-docker-tags
        run: |
          if [[ "${{ matrix.php }}" == "8.1" ]]; then
            tags="${{ matrix.php }},latest"
          else
            tags="${{ matrix.php }}"
          fi
          echo "::set-output name=tag::${tags}"

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: tinect/shopware-easy-coding-standard
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          tags: ${{ steps.get-publish-docker-tags.outputs.tags }}
